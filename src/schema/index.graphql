type Query {
  cards: [Card!]!
  card(id: ID!): Card
  files(cardId: ID!): [File!]!
}

type Mutation {
  addCard(input: AddCardInput!): Card
  editCard(input: EditCardInput!): Card
  deleteCard(id: ID!): DeleteResponse
}

type Card {
  id: ID!
  title: String!
  priority: String!
  estimatedShippingDate: String!
  orderDetails: OrderDetails!
  files: [File!]!
}

type OrderDetails {
  part: String!
  partNumber: String!
  releaseStatus: String!
  drawingNumber: String!
  flightArticle: String!
}

type File {
  id: ID!
  category: String!
  name: String!
  date: String!
  description: String!
  type: String!
  thumbnail: String!
}

input AddCardInput {
  title: String!
  priority: String!
  estimatedShippingDate: String!
  orderDetails: AddOrderDetailsInput!
}

input AddOrderDetailsInput {
  part: String!
  partNumber: String!
  releaseStatus: String!
  drawingNumber: String!
  flightArticle: String!
}

input EditCardInput {
  id: ID!
  title: String
  priority: String
  estimatedShippingDate: String
  orderDetails: EditOrderDetailsInput
}

input EditOrderDetailsInput {
  part: String
  partNumber: String
  releaseStatus: String
  drawingNumber: String
  flightArticle: String
}

type DeleteResponse {
  success: Boolean!
}